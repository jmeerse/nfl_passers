#only need to install packages once
install.packages("tidyverse")
install.packages("nflfastR")
install.packages("ggimage")
install.packages("gt")
install.packages("remotes")
library(remotes)
remotes::install_github("jthomasmock/gtExtras")

#need to load libraries every time you run the program
library(tidyverse)
library(nflfastR)
library(ggimage)
library(gt)
library(gtExtras)
library(remotes)


#various ways to load play-by-play data

pbp <- load_pbp(2020:2021)
pbp_21$passer_player_name[pbp_21$passer_player_name == "Jos.Allen"] <- "J.Allen" #Josh allen got recoded only during week 3 2021

pbp_20 <- load_pbp(2020)
pbp_21 <- load_pbp(2021)
pbp_21$passer_player_name[pbp_21$passer_player_name == "Jos.Allen"] <- "J.Allen"

  
#trying to measure after sack for every qb
pbpp <- pbp_21 %>%
  filter(pass == 1) %>%
  filter(!is.na(passer_player_name)) %>% 
  group_by(passer_player_name) %>% 
  filter(n() > 150) %>% 
  ungroup()

#select important info
pbpp <- pbpp %>% select(week, passer_player_name, air_yards, series_result, qb_epa, epa, air_epa, 
                wpa, sack, cpoe, complete_pass, interception, fumble, 
                qb_hit, receiver_player_name, posteam)

#sort by passer and play number - hopefully get sequential plays
pbpps <- arrange(pbpp, passer_player_name, week)

#counting total plays by passer
TotPlays <- pbpps %>% 
  group_by(passer_player_name) %>% 
  summarise(plays = n(), sacks = sum(sack), fumbles = sum(fumble), interceptions = sum(interception), sack_rate = sacks/plays)

#new variables
pbpps <- pbpps %>%
  mutate(air_yards_as = "", qb_epa_as = "", epa_as = "", 
         air_epa_as = "", wpa_as = "", cpoe_as = "", complete_pass_as = "",
         receiver_player_name_as = "")


#grabs after sack air yards
pbpps$air_yards_as <- if_else((pbpps$passer_player_name == lead(pbpps$passer_player_name)) & ((pbpps$sack == 1) | (pbpps$interception == 1) | (pbpps$fumble == 1)) , 
                              lead(pbpps$air_yards), 
                              NULL)
#have to do the same for all the other _as variables, but just change variable name
pbpps$qb_epa_as <- if_else((pbpps$passer_player_name == lead(pbpps$passer_player_name)) & ((pbpps$sack == 1) | (pbpps$interception == 1) | (pbpps$fumble == 1)) , 
                              lead(pbpps$qb_epa), 
                              NULL)
pbpps$epa_as <- if_else((pbpps$passer_player_name == lead(pbpps$passer_player_name)) & ((pbpps$sack == 1) | (pbpps$interception == 1) | (pbpps$fumble == 1)) , 
                              lead(pbpps$epa), 
                              NULL)
pbpps$wpa_as <- if_else((pbpps$passer_player_name == lead(pbpps$passer_player_name)) & ((pbpps$sack == 1) | (pbpps$interception == 1) | (pbpps$fumble == 1)) , 
                              lead(pbpps$wpa), 
                              NULL)
pbpps$cpoe_as <- if_else((pbpps$passer_player_name == lead(pbpps$passer_player_name)) & ((pbpps$sack == 1) | (pbpps$interception == 1) | (pbpps$fumble == 1)) , 
                              lead(pbpps$cpoe), 
                              NULL)
pbpps$complete_pass_as <- if_else((pbpps$passer_player_name == lead(pbpps$passer_player_name)) & ((pbpps$sack == 1) | (pbpps$interception == 1) | (pbpps$fumble == 1)) , 
                              lead(pbpps$complete_pass), 
                              NULL)
pbpps$receiver_player_name_as <- if_else((pbpps$passer_player_name == lead(pbpps$passer_player_name)) & ((pbpps$sack == 1) | (pbpps$interception == 1) | (pbpps$fumble == 1)) , 
                              lead(pbpps$receiver_player_name), 
                              NULL)

#epa etc for good plays
stats_ns <- pbpps %>% 
  filter(sack != 1, interception != 1, fumble != 1) %>% 
  group_by(passer_player_name) %>% 
  summarise(g_epa = mean(epa, na.rm = T), g_cpoe = mean(cpoe, na.rm = T), g_air_yards = mean(air_yards, na.rm = T), team = last(posteam))

#same, but for sacks etc
stats_as <- pbpps %>% 
  filter(sack == 1 | interception == 1 | fumble == 1) %>% 
  group_by(passer_player_name) %>% 
  summarise(as_epa = mean(epa_as, na.rm = T), as_cpoe = mean(cpoe_as, na.rm = T), as_air_yards = mean(air_yards_as, na.rm = T))

# combine good plays and after-sack plays  -- need to attach team name color logos etc
stats <- left_join(stats_ns, stats_as, by = "passer_player_name")

#puts logos and colors on
stats <- stats %>%
+   left_join(teams_colors_logos, by = c("team" = "team_abbr"))

#makes a plot that connects each type of stat
stats %>%
  ggplot(aes(x = g_air_yards, xend =as_air_yards,  y = fct_reorder(passer_player_name, g_air_yards))) +
  geom_dumbbell(aes(fill = team_color, color = team_color2), stat = "identity") +
  geom_point(aes(x = g_air_yards), size = 3, color = "#FFFCFC", fill = "grey65", shape = 21, stroke = .7) +
  geom_point(aes(fill = team_color), size = 1, color = "#FFFCFC", shape = 21, stroke = .7) +
  scale_color_identity(aesthetics = c("fill", "color")) +
  theme_bw() +
  labs(x = "Average Air Yards Pass After a Sack",
      y = "Passer Name",
      title = "Quarterback Agressiveness after a setback",
      subtitle = "2021, minimum of 150 plays to be included") +
      theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
            plot.subtitle = element_text(size = 10, hjust = 0.5),
            panel.grid.major.y = element_line(size = 0.1))

ggplot() +
  geom_dumbbell(data = stats, aes(y = fct_reorder(passer_player_name, g_air_yards), x = g_air_yards, xend = as_air_yards),
                size = .5, color = "white",
                colour_x = "#000000",
                colour_xend = "#ffb612",
                dot_guide = FALSE, dot_guide_size = 1, dot_guide_colour = "black",
                size_x = 5, size_xend = 5) +
  theme_bw() 

#______________________________________________________________________________________________________________________________________________________________________
#below this is just looking at one QB

#filter to specific QB -- need to know passer_player_name (and note that Josh Allen's name got changed midway through 2021, hence the "or" | statement
JAllen_21 <- pbp_21 %>%
  filter(passer_player_name == 'J.Allen' | passer_player_name == 'Jos.Allen')

#need to create a play_num variable  
JAllen_21 <- JAllen_21 %>%
  mutate(play_num = row_number())


#create week by week total epa
JAllen_21_wk_epa <- JAllen_21 %>% group_by(week) %>%
  summarise(epa = sum(qb_epa))

#make a graph
ggplot(JAllen_21_wk_epa, aes(x=week, y=epa, group=1)) +
  geom_line()+
  geom_point()

# create air yards after sack variable lead takes at next value; should do this for every stat you want to measure after a sack - can combine into one mutate command
JAllen_21 <- JAllen_21 %>% 
  mutate(air_yards_as = lead(JAllen_21$air_yards))
  

#create after sack data frame
JAllen_21_as <- JAllen_21 %>% filter(sack == 1)

# do we need to filter out na's for epa?  This does it maybe
JA_20_s <- JAllen_20 %>%
  filter(sack == 1) %>%
  filter (!is.na(epa))
